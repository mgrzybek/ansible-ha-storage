---

- name: Install clvm packages
  package:
    name: "{{ ha_storage_clvm_packages }}"
    state: "{{ ha_storage_package_state }}"
    update_cache: "{{ ansible_pkg_mgr == 'apt' | ternary('yes', omit) }}"
    cache_valid_time: "{{ ansible_pkg_mgr == 'apt' | ternary(cache_timeout, omit) }}"
  register: install_packages
  until: install_packages | success
  retries: 5
  delay: 2
  tags:
    - install-apt
    - install-yum
    - instal-zypper
  when:
    - ha_storage_fs != "zfs"
    - ha_storage_use_clvm == true

- name: Install ocfs2 packages
  package:
    name: "{{ ha_storage_ocfs2_packages }}"
    state: "{{ ha_storage_package_state }}"
    update_cache: "{{ ansible_pkg_mgr == 'apt' | ternary('yes', omit) }}"
    cache_valid_time: "{{ ansible_pkg_mgr == 'apt' | ternary(cache_timeout, omit) }}"
  register: install_packages
  until: install_packages | success
  retries: 5
  delay: 2
  tags:
    - install-apt
    - install-yum
    - instal-zypper
#  when: '"ocfs2" in ha_storage.filesystems|json_query("fstype")'
  when: ha_storage_fs | lower == "ocfs2"

- name: Install zfs packages
  package:
    name: "{{ ha_storage_zfs_packages }}"
    state: "{{ ha_storage_package_state }}"
    update_cache: "{{ ansible_pkg_mgr == 'apt' | ternary('yes', omit) }}"
    cache_valid_time: "{{ ansible_pkg_mgr == 'apt' | ternary(cache_timeout, omit) }}"
  register: install_packages
  until: install_packages | success
  retries: 5
  delay: 2
  tags:
    - install-apt
  when: ha_storage_fs | lower == "zfs"

- name: Install xfs packages
  package:
    name: "{{ ha_storage_xfs_packages }}"
    state: "{{ ha_storage_package_state }}"
    update_cache: "{{ ansible_pkg_mgr == 'apt' | ternary('yes', omit) }}"
    cache_valid_time: "{{ ansible_pkg_mgr == 'apt' | ternary(cache_timeout, omit) }}"
  register: install_packages
  until: install_packages is success
  retries: 5
  delay: 2
  tags:
    - install-apt
  when: ha_storage_fs | lower == "xfs"

- block:
    - name: Install some crm scripts (directories)
      file: path={{ ha_storage_crm_scripts_root_path }}/{{ item }} state=directory
      with_items: "{{ ha_storage_crm_lvm_scripts }}"
      when: ha_storage_fs | lower != 'zfs'

    - name: Install some crm scripts (files)
      copy: src=scripts/{{ item }}.yml dest={{ ha_storage_crm_scripts_root_path }}/{{ item }}/main.yml
      with_items: "{{ ha_storage_crm_lvm_scripts }}"
      when: ha_storage_fs | lower != 'zfs'

    - name: Install some crm scripts (directories)
      file: path={{ ha_storage_crm_scripts_root_path }}/{{ item }} state=directory
      with_items: "{{ ha_storage_crm_zfs_scripts }}"
      when: ha_storage_fs | lower == "zfs"

    - name: Install some crm scripts (files)
      copy: src=scripts/{{ item }}.yml dest={{ ha_storage_crm_scripts_root_path }}/{{ item }}/main.yml
      with_items: "{{ ha_storage_crm_zfs_scripts }}"
      when: ha_storage_fs | lower == "zfs"

  when: ansible_os_family | lower != 'redhat'

- name: Install zfs resource agent on old Ubuntu version from github.com
  get_url: url={{ ha_storage_zfs_resource_agent_url }} dest={{ ha_storage_crm_ra_root_path }} mode=0755
  environment:
    https_proxy: "{{ ha_storage_http_proxy }}"
  when:
    - ha_storage_use_zfs_ra_github is defined
    - ha_storage_use_zfs_ra_github == true
    - ha_storage_fs == 'zfs'

- name: Install sfex resource agent from github.com
  get_url: url={{ ha_storage_sfex_resource_agent_url }} dest={{ ha_storage_crm_ra_root_path }} mode=0755
  environment:
    https_proxy: "{{ ha_storage_http_proxy }}"
  when:
    - ha_storage_use_sfex_ra_github is defined
    - ha_storage_use_sfex_ra_github == true
    - ha_storage_use_sfex == true
